# This is a basic workflow to help you get started with Actions
# Sourced from: https://medium.com/swlh/setting-up-github-actions-for-go-project-ea84f4ed3a40

name: CICD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.15.0"

      - name: Run vet
        run: go vet .

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

      - name: Run tests
        run: go test -v -race -timeout 30s

      - name: Run build
        run: ./bin/build.sh

      - name: Version
        run: echo "::set-env name=VERSION::$(./bin/version.sh)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $VERSION
          release_name: Release $VERSION
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset-binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./att
          asset_name: att
          asset_content_type: application/octet-stream

  # # The "deploy" workflow
  # deploy:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   needs: [build] # Only run this workflow when "build" workflow succeeds
  #   if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
  #   steps:
  #     - uses: actions/checkout@v2

  #     # Deploy to Docker registry
  #     - name: Deploy to Docker registry
  #       uses: docker/build-push-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: wilsontanwm/gosimple
  #         tag_with_ref: true
